<!DOCTYPE html>

<html>
  <head>
    <title>Protocol Documentation</title>
    <meta charset="UTF-8">
    <link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Ubuntu:400,700,400italic"/>
    <style>
      body {
        width: 60em;
        margin: 1em auto;
        color: #222;
        font-family: "Ubuntu", sans-serif;
        padding-bottom: 4em;
      }

      h1 {
        font-weight: normal;
        border-bottom: 1px solid #aaa;
        padding-bottom: 0.5ex;
      }

      h2 {
        border-bottom: 1px solid #aaa;
        padding-bottom: 0.5ex;
        margin: 1.5em 0;
      }

      h3 {
        font-weight: normal;
        border-bottom: 1px solid #aaa;
        padding-bottom: 0.5ex;
      }

      a {
        text-decoration: none;
        color: #567e25;
      }

      table {
        width: 100%;
        font-size: 80%;
        border-collapse: collapse;
      }

      thead {
        font-weight: 700;
        background-color: #dcdcdc;
      }

      tbody tr:nth-child(even) {
        background-color: #fbfbfb;
      }

      td {
        border: 1px solid #ccc;
        padding: 0.5ex 2ex;
      }

      td p {
        text-indent: 1em;
        margin: 0;
      }

      td p:nth-child(1) {
        text-indent: 0; /* No indent on first p in td */
      }

      /* Table of fields */
      .field-table td:nth-child(1) { /* Field */
        width: 10em;
      }
      .field-table td:nth-child(2) { /* Type */
        width: 10em;
      }
      .field-table td:nth-child(3) { /* Label */
        width: 6em;
      }
      .field-table td:nth-child(4) { /* Description */
        width: auto;
      }

      /* Table of extensions */
      .extension-table td:nth-child(1) { /* Extension */
        width: 10em;
      }
      .extension-table td:nth-child(2) { /* Type */
        width: 10em;
      }
      .extension-table td:nth-child(3) { /* Base */
        width: 10em;
      }
      .extension-table td:nth-child(4) { /* Number */
        width: 5em;
      }
      .extension-table td:nth-child(5) { /* Description */
        width: auto;
      }

      /* Table of enum values. */
      .enum-table td:nth-child(1) { /* Name */
        width: 10em;
      }
      .enum-table td:nth-child(2) { /* Number */
        width: 10em;
      }
      .enum-table td:nth-child(3) { /* Description */
        width: auto;
      }

      /* Table of scalar value types. */
      .scalar-value-types-table tr {
        height: 3em;
      }

      /* Table of contents. */
      #toc-container ul {
        list-style-type: none;
        padding-left: 1em;
        line-height: 180%;
        margin: 0;
      }
      #toc > li > a {
        font-weight: bold;
      }

      /* File heading div */
      .file-heading {
        width: 100%;
        display: table;
        border-bottom: 1px solid #aaa;
        margin: 4em 0 1.5em 0;
      }
      .file-heading h2 {
        border: none;
        display: table-cell;
      }
      .file-heading a {
        text-align: right;
        display: table-cell;
      }

      /* The 'M', 'E' and 'X' badges in the ToC */
      .badge {
        width: 1.6em;
        height: 1.6em;
        display: inline-block;

        line-height: 1.6em;
        text-align: center;
        font-weight: bold;
        font-size: 60%;

        color: #89ba48;
        background-color: #dff0c8;

        margin: 0.5ex 1em 0.5ex -1em;
        border: 1px solid #fbfbfb;
        border-radius: 1ex;
      }
    </style>

    <!-- User custom CSS -->
    <link rel="stylesheet" type="text/css" href="stylesheet.css"/>
  </head>

  <body>

    <h1 id="title">Protocol Documentation</h1>

    <h2>Table of Contents</h2>

    <div id="toc-container">
      <ul id="toc">
        <li>
          <a href="#worker.proto">worker.proto</a>
          <ul>
            <li>
              <a href="#tensorflow.CleanupAllRequest">
                <span class="badge">M</span>
                CleanupAllRequest
              </a>
            </li>
            <li>
              <a href="#tensorflow.CleanupAllResponse">
                <span class="badge">M</span>
                CleanupAllResponse
              </a>
            </li>
            <li>
              <a href="#tensorflow.CleanupGraphRequest">
                <span class="badge">M</span>
                CleanupGraphRequest
              </a>
            </li>
            <li>
              <a href="#tensorflow.CleanupGraphResponse">
                <span class="badge">M</span>
                CleanupGraphResponse
              </a>
            </li>
            <li>
              <a href="#tensorflow.DeregisterGraphRequest">
                <span class="badge">M</span>
                DeregisterGraphRequest
              </a>
            </li>
            <li>
              <a href="#tensorflow.DeregisterGraphResponse">
                <span class="badge">M</span>
                DeregisterGraphResponse
              </a>
            </li>
            <li>
              <a href="#tensorflow.ExecutorOpts">
                <span class="badge">M</span>
                ExecutorOpts
              </a>
            </li>
            <li>
              <a href="#tensorflow.GetStatusRequest">
                <span class="badge">M</span>
                GetStatusRequest
              </a>
            </li>
            <li>
              <a href="#tensorflow.GetStatusResponse">
                <span class="badge">M</span>
                GetStatusResponse
              </a>
            </li>
            <li>
              <a href="#tensorflow.LabeledStepStats">
                <span class="badge">M</span>
                LabeledStepStats
              </a>
            </li>
            <li>
              <a href="#tensorflow.LoggingRequest">
                <span class="badge">M</span>
                LoggingRequest
              </a>
            </li>
            <li>
              <a href="#tensorflow.LoggingResponse">
                <span class="badge">M</span>
                LoggingResponse
              </a>
            </li>
            <li>
              <a href="#tensorflow.NamedTensor">
                <span class="badge">M</span>
                NamedTensor
              </a>
            </li>
            <li>
              <a href="#tensorflow.RecvTensorRequest">
                <span class="badge">M</span>
                RecvTensorRequest
              </a>
            </li>
            <li>
              <a href="#tensorflow.RecvTensorResponse">
                <span class="badge">M</span>
                RecvTensorResponse
              </a>
            </li>
            <li>
              <a href="#tensorflow.RegisterGraphRequest">
                <span class="badge">M</span>
                RegisterGraphRequest
              </a>
            </li>
            <li>
              <a href="#tensorflow.RegisterGraphResponse">
                <span class="badge">M</span>
                RegisterGraphResponse
              </a>
            </li>
            <li>
              <a href="#tensorflow.RunGraphRequest">
                <span class="badge">M</span>
                RunGraphRequest
              </a>
            </li>
            <li>
              <a href="#tensorflow.RunGraphResponse">
                <span class="badge">M</span>
                RunGraphResponse
              </a>
            </li>
            <li>
              <a href="#tensorflow.TraceOpts">
                <span class="badge">M</span>
                TraceOpts
              </a>
            </li>
            <li>
              <a href="#tensorflow.TracingRequest">
                <span class="badge">M</span>
                TracingRequest
              </a>
            </li>
            <li>
              <a href="#tensorflow.TracingResponse">
                <span class="badge">M</span>
                TracingResponse
              </a>
            </li>
          </ul>
        </li>
        <li><a href="#scalar-value-types">Scalar Value Types</a></li>
      </ul>
    </div>

    <div class="file-heading">
      <h2 id="worker.proto">worker.proto</h2><a href="#title">Top</a>
    </div>
    
    <h3 id="tensorflow.CleanupAllRequest">CleanupAllRequest</h3>
    <p></p>
    <table class="field-table">
      <thead>
        <tr><td>Field</td><td>Type</td><td>Label</td><td>Description</td></tr>
      </thead>
      <tbody>
        <tr>
          <td>container</td>
          <td><a href="#string">string</a></td>
          <td>repeated</td>
          <td><p></p></td>
        </tr>
      </tbody>
    </table>
    <h3 id="tensorflow.CleanupAllResponse">CleanupAllResponse</h3>
    <p></p>
    <table class="field-table">
      <thead>
        <tr><td>Field</td><td>Type</td><td>Label</td><td>Description</td></tr>
      </thead>
      <tbody>
      </tbody>
    </table>
    <h3 id="tensorflow.CleanupGraphRequest">CleanupGraphRequest</h3>
    <p></p>
    <table class="field-table">
      <thead>
        <tr><td>Field</td><td>Type</td><td>Label</td><td>Description</td></tr>
      </thead>
      <tbody>
        <tr>
          <td>step_id</td>
          <td><a href="#int64">int64</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
      </tbody>
    </table>
    <h3 id="tensorflow.CleanupGraphResponse">CleanupGraphResponse</h3>
    <p></p>
    <table class="field-table">
      <thead>
        <tr><td>Field</td><td>Type</td><td>Label</td><td>Description</td></tr>
      </thead>
      <tbody>
      </tbody>
    </table>
    <h3 id="tensorflow.DeregisterGraphRequest">DeregisterGraphRequest</h3>
    <p></p>
    <table class="field-table">
      <thead>
        <tr><td>Field</td><td>Type</td><td>Label</td><td>Description</td></tr>
      </thead>
      <tbody>
        <tr>
          <td>graph_handle</td>
          <td><a href="#string">string</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
      </tbody>
    </table>
    <h3 id="tensorflow.DeregisterGraphResponse">DeregisterGraphResponse</h3>
    <p></p>
    <table class="field-table">
      <thead>
        <tr><td>Field</td><td>Type</td><td>Label</td><td>Description</td></tr>
      </thead>
      <tbody>
      </tbody>
    </table>
    <h3 id="tensorflow.ExecutorOpts">ExecutorOpts</h3>
    <p></p>
    <table class="field-table">
      <thead>
        <tr><td>Field</td><td>Type</td><td>Label</td><td>Description</td></tr>
      </thead>
      <tbody>
        <tr>
          <td>record_costs</td>
          <td><a href="#bool">bool</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>record_timeline</td>
          <td><a href="#bool">bool</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
      </tbody>
    </table>
    <h3 id="tensorflow.GetStatusRequest">GetStatusRequest</h3>
    <p></p>
    <table class="field-table">
      <thead>
        <tr><td>Field</td><td>Type</td><td>Label</td><td>Description</td></tr>
      </thead>
      <tbody>
      </tbody>
    </table>
    <h3 id="tensorflow.GetStatusResponse">GetStatusResponse</h3>
    <p></p>
    <table class="field-table">
      <thead>
        <tr><td>Field</td><td>Type</td><td>Label</td><td>Description</td></tr>
      </thead>
      <tbody>
        <tr>
          <td>device_attributes</td>
          <td><a href="#tensorflow.DeviceAttributes">DeviceAttributes</a></td>
          <td>repeated</td>
          <td><p></p></td>
        </tr>
      </tbody>
    </table>
    <h3 id="tensorflow.LabeledStepStats">LabeledStepStats</h3>
    <p></p>
    <table class="field-table">
      <thead>
        <tr><td>Field</td><td>Type</td><td>Label</td><td>Description</td></tr>
      </thead>
      <tbody>
        <tr>
          <td>step_id</td>
          <td><a href="#int64">int64</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>step_stats</td>
          <td><a href="#tensorflow.StepStats">StepStats</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
      </tbody>
    </table>
    <h3 id="tensorflow.LoggingRequest">LoggingRequest</h3>
    <p></p>
    <table class="field-table">
      <thead>
        <tr><td>Field</td><td>Type</td><td>Label</td><td>Description</td></tr>
      </thead>
      <tbody>
        <tr>
          <td>rpc_logging</td>
          <td><a href="#bool">bool</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>clear</td>
          <td><a href="#bool">bool</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>fetch_step_id</td>
          <td><a href="#int64">int64</a></td>
          <td>repeated</td>
          <td><p></p></td>
        </tr>
      </tbody>
    </table>
    <h3 id="tensorflow.LoggingResponse">LoggingResponse</h3>
    <p></p>
    <table class="field-table">
      <thead>
        <tr><td>Field</td><td>Type</td><td>Label</td><td>Description</td></tr>
      </thead>
      <tbody>
        <tr>
          <td>step</td>
          <td><a href="#tensorflow.LabeledStepStats">LabeledStepStats</a></td>
          <td>repeated</td>
          <td><p></p></td>
        </tr>
      </tbody>
    </table>
    <h3 id="tensorflow.NamedTensor">NamedTensor</h3>
    <p></p>
    <table class="field-table">
      <thead>
        <tr><td>Field</td><td>Type</td><td>Label</td><td>Description</td></tr>
      </thead>
      <tbody>
        <tr>
          <td>key</td>
          <td><a href="#string">string</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>val</td>
          <td><a href="#tensorflow.TensorProto">TensorProto</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
      </tbody>
    </table>
    <h3 id="tensorflow.RecvTensorRequest">RecvTensorRequest</h3>
    <p></p>
    <table class="field-table">
      <thead>
        <tr><td>Field</td><td>Type</td><td>Label</td><td>Description</td></tr>
      </thead>
      <tbody>
        <tr>
          <td>step_id</td>
          <td><a href="#int64">int64</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>rendezvous_key</td>
          <td><a href="#string">string</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>dma_ok</td>
          <td><a href="#bool">bool</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>client_locality</td>
          <td><a href="#tensorflow.DeviceLocality">DeviceLocality</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>server_locality</td>
          <td><a href="#tensorflow.DeviceLocality">DeviceLocality</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
      </tbody>
    </table>
    <h3 id="tensorflow.RecvTensorResponse">RecvTensorResponse</h3>
    <p></p>
    <table class="field-table">
      <thead>
        <tr><td>Field</td><td>Type</td><td>Label</td><td>Description</td></tr>
      </thead>
      <tbody>
        <tr>
          <td>tensor</td>
          <td><a href="#tensorflow.TensorProto">TensorProto</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>is_dead</td>
          <td><a href="#bool">bool</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>send_start_micros</td>
          <td><a href="#int64">int64</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>transport_options</td>
          <td><a href="#google.protobuf.Any">Any</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
      </tbody>
    </table>
    <h3 id="tensorflow.RegisterGraphRequest">RegisterGraphRequest</h3>
    <p></p>
    <table class="field-table">
      <thead>
        <tr><td>Field</td><td>Type</td><td>Label</td><td>Description</td></tr>
      </thead>
      <tbody>
        <tr>
          <td>session_handle</td>
          <td><a href="#string">string</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>graph_def</td>
          <td><a href="#tensorflow.GraphDef">GraphDef</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>has_control_flow</td>
          <td><a href="#bool">bool</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>graph_options</td>
          <td><a href="#tensorflow.GraphOptions">GraphOptions</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
      </tbody>
    </table>
    <h3 id="tensorflow.RegisterGraphResponse">RegisterGraphResponse</h3>
    <p></p>
    <table class="field-table">
      <thead>
        <tr><td>Field</td><td>Type</td><td>Label</td><td>Description</td></tr>
      </thead>
      <tbody>
        <tr>
          <td>graph_handle</td>
          <td><a href="#string">string</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
      </tbody>
    </table>
    <h3 id="tensorflow.RunGraphRequest">RunGraphRequest</h3>
    <p></p>
    <table class="field-table">
      <thead>
        <tr><td>Field</td><td>Type</td><td>Label</td><td>Description</td></tr>
      </thead>
      <tbody>
        <tr>
          <td>graph_handle</td>
          <td><a href="#string">string</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>step_id</td>
          <td><a href="#int64">int64</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>exec_opts</td>
          <td><a href="#tensorflow.ExecutorOpts">ExecutorOpts</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>send</td>
          <td><a href="#tensorflow.NamedTensor">NamedTensor</a></td>
          <td>repeated</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>recv_key</td>
          <td><a href="#string">string</a></td>
          <td>repeated</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>is_partial</td>
          <td><a href="#bool">bool</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>is_last_partial_run</td>
          <td><a href="#bool">bool</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
      </tbody>
    </table>
    <h3 id="tensorflow.RunGraphResponse">RunGraphResponse</h3>
    <p></p>
    <table class="field-table">
      <thead>
        <tr><td>Field</td><td>Type</td><td>Label</td><td>Description</td></tr>
      </thead>
      <tbody>
        <tr>
          <td>recv</td>
          <td><a href="#tensorflow.NamedTensor">NamedTensor</a></td>
          <td>repeated</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>step_stats</td>
          <td><a href="#tensorflow.StepStats">StepStats</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>cost_graph</td>
          <td><a href="#tensorflow.CostGraphDef">CostGraphDef</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
      </tbody>
    </table>
    <h3 id="tensorflow.TraceOpts">TraceOpts</h3>
    <p></p>
    <table class="field-table">
      <thead>
        <tr><td>Field</td><td>Type</td><td>Label</td><td>Description</td></tr>
      </thead>
      <tbody>
        <tr>
          <td>duration</td>
          <td><a href="#double">double</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>use_step_profiler</td>
          <td><a href="#bool">bool</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>use_kernel_profiler</td>
          <td><a href="#bool">bool</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>use_extended_profiler</td>
          <td><a href="#bool">bool</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>use_gpu_profiler</td>
          <td><a href="#bool">bool</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>use_sample_profiler</td>
          <td><a href="#bool">bool</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
      </tbody>
    </table>
    <h3 id="tensorflow.TracingRequest">TracingRequest</h3>
    <p></p>
    <table class="field-table">
      <thead>
        <tr><td>Field</td><td>Type</td><td>Label</td><td>Description</td></tr>
      </thead>
      <tbody>
        <tr>
          <td>options</td>
          <td><a href="#tensorflow.TraceOpts">TraceOpts</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
      </tbody>
    </table>
    <h3 id="tensorflow.TracingResponse">TracingResponse</h3>
    <p></p>
    <table class="field-table">
      <thead>
        <tr><td>Field</td><td>Type</td><td>Label</td><td>Description</td></tr>
      </thead>
      <tbody>
      </tbody>
    </table>

    <h2 id="scalar-value-types">Scalar Value Types</h2>
    <table class="scalar-value-types-table">
      <thead>
        <tr><td>.proto Type</td><td>Notes</td><td>C++ Type</td><td>Java Type</td><td>Python Type</td></tr>
      </thead>
      <tbody>
        <tr id="double">
          <td>double</td>
          <td></td>
          <td>double</td>
          <td>double</td>
          <td>float</td>
        </tr>
        <tr id="float">
          <td>float</td>
          <td></td>
          <td>float</td>
          <td>float</td>
          <td>float</td>
        </tr>
        <tr id="int32">
          <td>int32</td>
          <td>Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead.</td>
          <td>int32</td>
          <td>int</td>
          <td>int</td>
        </tr>
        <tr id="int64">
          <td>int64</td>
          <td>Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead.</td>
          <td>int64</td>
          <td>long</td>
          <td>int/long</td>
        </tr>
        <tr id="uint32">
          <td>uint32</td>
          <td>Uses variable-length encoding.</td>
          <td>uint32</td>
          <td>int</td>
          <td>int/long</td>
        </tr>
        <tr id="uint64">
          <td>uint64</td>
          <td>Uses variable-length encoding.</td>
          <td>uint64</td>
          <td>long</td>
          <td>int/long</td>
        </tr>
        <tr id="sint32">
          <td>sint32</td>
          <td>Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s.</td>
          <td>int32</td>
          <td>int</td>
          <td>int</td>
        </tr>
        <tr id="sint64">
          <td>sint64</td>
          <td>Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s.</td>
          <td>int64</td>
          <td>long</td>
          <td>int/long</td>
        </tr>
        <tr id="fixed32">
          <td>fixed32</td>
          <td>Always four bytes. More efficient than uint32 if values are often greater than 2^28.</td>
          <td>uint32</td>
          <td>int</td>
          <td>int</td>
        </tr>
        <tr id="fixed64">
          <td>fixed64</td>
          <td>Always eight bytes. More efficient than uint64 if values are often greater than 2^56.</td>
          <td>uint64</td>
          <td>long</td>
          <td>int/long</td>
        </tr>
        <tr id="sfixed32">
          <td>sfixed32</td>
          <td>Always four bytes.</td>
          <td>int32</td>
          <td>int</td>
          <td>int</td>
        </tr>
        <tr id="sfixed64">
          <td>sfixed64</td>
          <td>Always eight bytes.</td>
          <td>int64</td>
          <td>long</td>
          <td>int/long</td>
        </tr>
        <tr id="bool">
          <td>bool</td>
          <td></td>
          <td>bool</td>
          <td>boolean</td>
          <td>boolean</td>
        </tr>
        <tr id="string">
          <td>string</td>
          <td>A string must always contain UTF-8 encoded or 7-bit ASCII text.</td>
          <td>string</td>
          <td>String</td>
          <td>str/unicode</td>
        </tr>
        <tr id="bytes">
          <td>bytes</td>
          <td>May contain any arbitrary sequence of bytes.</td>
          <td>string</td>
          <td>ByteString</td>
          <td>str</td>
        </tr>
      </tbody>
    </table>

  </body>
</html>
