<!DOCTYPE html>

<html>
  <head>
    <title>Protocol Documentation</title>
    <meta charset="UTF-8">
    <link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Ubuntu:400,700,400italic"/>
    <style>
      body {
        width: 60em;
        margin: 1em auto;
        color: #222;
        font-family: "Ubuntu", sans-serif;
        padding-bottom: 4em;
      }

      h1 {
        font-weight: normal;
        border-bottom: 1px solid #aaa;
        padding-bottom: 0.5ex;
      }

      h2 {
        border-bottom: 1px solid #aaa;
        padding-bottom: 0.5ex;
        margin: 1.5em 0;
      }

      h3 {
        font-weight: normal;
        border-bottom: 1px solid #aaa;
        padding-bottom: 0.5ex;
      }

      a {
        text-decoration: none;
        color: #567e25;
      }

      table {
        width: 100%;
        font-size: 80%;
        border-collapse: collapse;
      }

      thead {
        font-weight: 700;
        background-color: #dcdcdc;
      }

      tbody tr:nth-child(even) {
        background-color: #fbfbfb;
      }

      td {
        border: 1px solid #ccc;
        padding: 0.5ex 2ex;
      }

      td p {
        text-indent: 1em;
        margin: 0;
      }

      td p:nth-child(1) {
        text-indent: 0; /* No indent on first p in td */
      }

      /* Table of fields */
      .field-table td:nth-child(1) { /* Field */
        width: 10em;
      }
      .field-table td:nth-child(2) { /* Type */
        width: 10em;
      }
      .field-table td:nth-child(3) { /* Label */
        width: 6em;
      }
      .field-table td:nth-child(4) { /* Description */
        width: auto;
      }

      /* Table of extensions */
      .extension-table td:nth-child(1) { /* Extension */
        width: 10em;
      }
      .extension-table td:nth-child(2) { /* Type */
        width: 10em;
      }
      .extension-table td:nth-child(3) { /* Base */
        width: 10em;
      }
      .extension-table td:nth-child(4) { /* Number */
        width: 5em;
      }
      .extension-table td:nth-child(5) { /* Description */
        width: auto;
      }

      /* Table of enum values. */
      .enum-table td:nth-child(1) { /* Name */
        width: 10em;
      }
      .enum-table td:nth-child(2) { /* Number */
        width: 10em;
      }
      .enum-table td:nth-child(3) { /* Description */
        width: auto;
      }

      /* Table of scalar value types. */
      .scalar-value-types-table tr {
        height: 3em;
      }

      /* Table of contents. */
      #toc-container ul {
        list-style-type: none;
        padding-left: 1em;
        line-height: 180%;
        margin: 0;
      }
      #toc > li > a {
        font-weight: bold;
      }

      /* File heading div */
      .file-heading {
        width: 100%;
        display: table;
        border-bottom: 1px solid #aaa;
        margin: 4em 0 1.5em 0;
      }
      .file-heading h2 {
        border: none;
        display: table-cell;
      }
      .file-heading a {
        text-align: right;
        display: table-cell;
      }

      /* The 'M', 'E' and 'X' badges in the ToC */
      .badge {
        width: 1.6em;
        height: 1.6em;
        display: inline-block;

        line-height: 1.6em;
        text-align: center;
        font-weight: bold;
        font-size: 60%;

        color: #89ba48;
        background-color: #dff0c8;

        margin: 0.5ex 1em 0.5ex -1em;
        border: 1px solid #fbfbfb;
        border-radius: 1ex;
      }
    </style>

    <!-- User custom CSS -->
    <link rel="stylesheet" type="text/css" href="stylesheet.css"/>
  </head>

  <body>

    <h1 id="title">Protocol Documentation</h1>

    <h2>Table of Contents</h2>

    <div id="toc-container">
      <ul id="toc">
        <li>
          <a href="#config.proto">config.proto</a>
          <ul>
            <li>
              <a href="#tensorflow.ConfigProto">
                <span class="badge">M</span>
                ConfigProto
              </a>
            </li>
            <li>
              <a href="#tensorflow.ConfigProto.DeviceCountEntry">
                <span class="badge">M</span>
                ConfigProto.DeviceCountEntry
              </a>
            </li>
            <li>
              <a href="#tensorflow.DebugTensorWatch">
                <span class="badge">M</span>
                DebugTensorWatch
              </a>
            </li>
            <li>
              <a href="#tensorflow.GPUOptions">
                <span class="badge">M</span>
                GPUOptions
              </a>
            </li>
            <li>
              <a href="#tensorflow.GraphOptions">
                <span class="badge">M</span>
                GraphOptions
              </a>
            </li>
            <li>
              <a href="#tensorflow.OptimizerOptions">
                <span class="badge">M</span>
                OptimizerOptions
              </a>
            </li>
            <li>
              <a href="#tensorflow.RunMetadata">
                <span class="badge">M</span>
                RunMetadata
              </a>
            </li>
            <li>
              <a href="#tensorflow.RunOptions">
                <span class="badge">M</span>
                RunOptions
              </a>
            </li>
            <li>
              <a href="#tensorflow.ThreadPoolOptionProto">
                <span class="badge">M</span>
                ThreadPoolOptionProto
              </a>
            </li>
            <li>
              <a href="#tensorflow.OptimizerOptions.Level">
                <span class="badge">E</span>
                OptimizerOptions.Level
              </a>
            </li>
            <li>
              <a href="#tensorflow.RunOptions.TraceLevel">
                <span class="badge">E</span>
                RunOptions.TraceLevel
              </a>
            </li>
          </ul>
        </li>
        <li><a href="#scalar-value-types">Scalar Value Types</a></li>
      </ul>
    </div>

    <div class="file-heading">
      <h2 id="config.proto">config.proto</h2><a href="#title">Top</a>
    </div>
    
    <h3 id="tensorflow.ConfigProto">ConfigProto</h3>
    <p></p>
    <table class="field-table">
      <thead>
        <tr><td>Field</td><td>Type</td><td>Label</td><td>Description</td></tr>
      </thead>
      <tbody>
        <tr>
          <td>device_count</td>
          <td><a href="#tensorflow.ConfigProto.DeviceCountEntry">ConfigProto.DeviceCountEntry</a></td>
          <td>repeated</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>intra_op_parallelism_threads</td>
          <td><a href="#int32">int32</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>inter_op_parallelism_threads</td>
          <td><a href="#int32">int32</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>use_per_session_threads</td>
          <td><a href="#bool">bool</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>session_inter_op_thread_pool</td>
          <td><a href="#tensorflow.ThreadPoolOptionProto">ThreadPoolOptionProto</a></td>
          <td>repeated</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>placement_period</td>
          <td><a href="#int32">int32</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>device_filters</td>
          <td><a href="#string">string</a></td>
          <td>repeated</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>gpu_options</td>
          <td><a href="#tensorflow.GPUOptions">GPUOptions</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>allow_soft_placement</td>
          <td><a href="#bool">bool</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>log_device_placement</td>
          <td><a href="#bool">bool</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>graph_options</td>
          <td><a href="#tensorflow.GraphOptions">GraphOptions</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>operation_timeout_in_ms</td>
          <td><a href="#int64">int64</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
      </tbody>
    </table>
    <h3 id="tensorflow.ConfigProto.DeviceCountEntry">ConfigProto.DeviceCountEntry</h3>
    <p></p>
    <table class="field-table">
      <thead>
        <tr><td>Field</td><td>Type</td><td>Label</td><td>Description</td></tr>
      </thead>
      <tbody>
        <tr>
          <td>key</td>
          <td><a href="#string">string</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>value</td>
          <td><a href="#int32">int32</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
      </tbody>
    </table>
    <h3 id="tensorflow.DebugTensorWatch">DebugTensorWatch</h3>
    <p></p>
    <table class="field-table">
      <thead>
        <tr><td>Field</td><td>Type</td><td>Label</td><td>Description</td></tr>
      </thead>
      <tbody>
        <tr>
          <td>node_name</td>
          <td><a href="#string">string</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>output_slot</td>
          <td><a href="#int32">int32</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>debug_ops</td>
          <td><a href="#string">string</a></td>
          <td>repeated</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>debug_urls</td>
          <td><a href="#string">string</a></td>
          <td>repeated</td>
          <td><p></p></td>
        </tr>
      </tbody>
    </table>
    <h3 id="tensorflow.GPUOptions">GPUOptions</h3>
    <p></p>
    <table class="field-table">
      <thead>
        <tr><td>Field</td><td>Type</td><td>Label</td><td>Description</td></tr>
      </thead>
      <tbody>
        <tr>
          <td>per_process_gpu_memory_fraction</td>
          <td><a href="#double">double</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>allocator_type</td>
          <td><a href="#string">string</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>deferred_deletion_bytes</td>
          <td><a href="#int64">int64</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>allow_growth</td>
          <td><a href="#bool">bool</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>visible_device_list</td>
          <td><a href="#string">string</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
      </tbody>
    </table>
    <h3 id="tensorflow.GraphOptions">GraphOptions</h3>
    <p></p>
    <table class="field-table">
      <thead>
        <tr><td>Field</td><td>Type</td><td>Label</td><td>Description</td></tr>
      </thead>
      <tbody>
        <tr>
          <td>enable_recv_scheduling</td>
          <td><a href="#bool">bool</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>optimizer_options</td>
          <td><a href="#tensorflow.OptimizerOptions">OptimizerOptions</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>build_cost_model</td>
          <td><a href="#int64">int64</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>build_cost_model_after</td>
          <td><a href="#int64">int64</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>infer_shapes</td>
          <td><a href="#bool">bool</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>place_pruned_graph</td>
          <td><a href="#bool">bool</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>enable_bfloat16_sendrecv</td>
          <td><a href="#bool">bool</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>timeline_step</td>
          <td><a href="#int32">int32</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
      </tbody>
    </table>
    <h3 id="tensorflow.OptimizerOptions">OptimizerOptions</h3>
    <p></p>
    <table class="field-table">
      <thead>
        <tr><td>Field</td><td>Type</td><td>Label</td><td>Description</td></tr>
      </thead>
      <tbody>
        <tr>
          <td>do_common_subexpression_elimination</td>
          <td><a href="#bool">bool</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>do_constant_folding</td>
          <td><a href="#bool">bool</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>do_function_inlining</td>
          <td><a href="#bool">bool</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>opt_level</td>
          <td><a href="#tensorflow.OptimizerOptions.Level">OptimizerOptions.Level</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
      </tbody>
    </table>
    <h3 id="tensorflow.RunMetadata">RunMetadata</h3>
    <p></p>
    <table class="field-table">
      <thead>
        <tr><td>Field</td><td>Type</td><td>Label</td><td>Description</td></tr>
      </thead>
      <tbody>
        <tr>
          <td>step_stats</td>
          <td><a href="#tensorflow.StepStats">StepStats</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>cost_graph</td>
          <td><a href="#tensorflow.CostGraphDef">CostGraphDef</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>partition_graphs</td>
          <td><a href="#tensorflow.GraphDef">GraphDef</a></td>
          <td>repeated</td>
          <td><p></p></td>
        </tr>
      </tbody>
    </table>
    <h3 id="tensorflow.RunOptions">RunOptions</h3>
    <p></p>
    <table class="field-table">
      <thead>
        <tr><td>Field</td><td>Type</td><td>Label</td><td>Description</td></tr>
      </thead>
      <tbody>
        <tr>
          <td>trace_level</td>
          <td><a href="#tensorflow.RunOptions.TraceLevel">RunOptions.TraceLevel</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>timeout_in_ms</td>
          <td><a href="#int64">int64</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>inter_op_thread_pool</td>
          <td><a href="#int32">int32</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>debug_tensor_watch_opts</td>
          <td><a href="#tensorflow.DebugTensorWatch">DebugTensorWatch</a></td>
          <td>repeated</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>output_partition_graphs</td>
          <td><a href="#bool">bool</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
      </tbody>
    </table>
    <h3 id="tensorflow.ThreadPoolOptionProto">ThreadPoolOptionProto</h3>
    <p></p>
    <table class="field-table">
      <thead>
        <tr><td>Field</td><td>Type</td><td>Label</td><td>Description</td></tr>
      </thead>
      <tbody>
        <tr>
          <td>num_threads</td>
          <td><a href="#int32">int32</a></td>
          <td>optional</td>
          <td><p></p></td>
        </tr>
      </tbody>
    </table>
    <h3 id="tensorflow.OptimizerOptions.Level">OptimizerOptions.Level</h3>
    <p></p>
    <table class="enum-table">
      <thead>
        <tr><td>Name</td><td>Number</td><td>Description</td></tr>
      </thead>
      <tbody>
        <tr>
          <td>L1</td>
          <td>0</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>L0</td>
          <td>-1</td>
          <td><p></p></td>
        </tr>
      </tbody>
    </table>
    <h3 id="tensorflow.RunOptions.TraceLevel">RunOptions.TraceLevel</h3>
    <p></p>
    <table class="enum-table">
      <thead>
        <tr><td>Name</td><td>Number</td><td>Description</td></tr>
      </thead>
      <tbody>
        <tr>
          <td>NO_TRACE</td>
          <td>0</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>SOFTWARE_TRACE</td>
          <td>1</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>HARDWARE_TRACE</td>
          <td>2</td>
          <td><p></p></td>
        </tr>
        <tr>
          <td>FULL_TRACE</td>
          <td>3</td>
          <td><p></p></td>
        </tr>
      </tbody>
    </table>

    <h2 id="scalar-value-types">Scalar Value Types</h2>
    <table class="scalar-value-types-table">
      <thead>
        <tr><td>.proto Type</td><td>Notes</td><td>C++ Type</td><td>Java Type</td><td>Python Type</td></tr>
      </thead>
      <tbody>
        <tr id="double">
          <td>double</td>
          <td></td>
          <td>double</td>
          <td>double</td>
          <td>float</td>
        </tr>
        <tr id="float">
          <td>float</td>
          <td></td>
          <td>float</td>
          <td>float</td>
          <td>float</td>
        </tr>
        <tr id="int32">
          <td>int32</td>
          <td>Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead.</td>
          <td>int32</td>
          <td>int</td>
          <td>int</td>
        </tr>
        <tr id="int64">
          <td>int64</td>
          <td>Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead.</td>
          <td>int64</td>
          <td>long</td>
          <td>int/long</td>
        </tr>
        <tr id="uint32">
          <td>uint32</td>
          <td>Uses variable-length encoding.</td>
          <td>uint32</td>
          <td>int</td>
          <td>int/long</td>
        </tr>
        <tr id="uint64">
          <td>uint64</td>
          <td>Uses variable-length encoding.</td>
          <td>uint64</td>
          <td>long</td>
          <td>int/long</td>
        </tr>
        <tr id="sint32">
          <td>sint32</td>
          <td>Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s.</td>
          <td>int32</td>
          <td>int</td>
          <td>int</td>
        </tr>
        <tr id="sint64">
          <td>sint64</td>
          <td>Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s.</td>
          <td>int64</td>
          <td>long</td>
          <td>int/long</td>
        </tr>
        <tr id="fixed32">
          <td>fixed32</td>
          <td>Always four bytes. More efficient than uint32 if values are often greater than 2^28.</td>
          <td>uint32</td>
          <td>int</td>
          <td>int</td>
        </tr>
        <tr id="fixed64">
          <td>fixed64</td>
          <td>Always eight bytes. More efficient than uint64 if values are often greater than 2^56.</td>
          <td>uint64</td>
          <td>long</td>
          <td>int/long</td>
        </tr>
        <tr id="sfixed32">
          <td>sfixed32</td>
          <td>Always four bytes.</td>
          <td>int32</td>
          <td>int</td>
          <td>int</td>
        </tr>
        <tr id="sfixed64">
          <td>sfixed64</td>
          <td>Always eight bytes.</td>
          <td>int64</td>
          <td>long</td>
          <td>int/long</td>
        </tr>
        <tr id="bool">
          <td>bool</td>
          <td></td>
          <td>bool</td>
          <td>boolean</td>
          <td>boolean</td>
        </tr>
        <tr id="string">
          <td>string</td>
          <td>A string must always contain UTF-8 encoded or 7-bit ASCII text.</td>
          <td>string</td>
          <td>String</td>
          <td>str/unicode</td>
        </tr>
        <tr id="bytes">
          <td>bytes</td>
          <td>May contain any arbitrary sequence of bytes.</td>
          <td>string</td>
          <td>ByteString</td>
          <td>str</td>
        </tr>
      </tbody>
    </table>

  </body>
</html>
