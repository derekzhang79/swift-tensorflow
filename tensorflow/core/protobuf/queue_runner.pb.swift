/*
 * DO NOT EDIT.
 *
 * Generated by the protocol buffer compiler.
 * Source: tensorflow/core/protobuf/queue_runner.proto
 *
 */

import Foundation
import SwiftProtobuf


///   Protocol buffer representing a QueueRunner.
struct Tensorflow_QueueRunnerDef: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Tensorflow_QueueRunnerDef"}
  public var protoMessageName: String {return "QueueRunnerDef"}
  public var protoPackageName: String {return "tensorflow"}
  public var jsonFieldNames: [String: Int] {return [
    "queueName": 1,
    "enqueueOpName": 2,
    "closeOpName": 3,
    "cancelOpName": 4,
    "queueClosedExceptionTypes": 5,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "queue_name": 1,
    "enqueue_op_name": 2,
    "close_op_name": 3,
    "cancel_op_name": 4,
    "queue_closed_exception_types": 5,
  ]}

  ///   Queue name.
  public var queueName: String = ""

  ///   A list of enqueue operations.
  public var enqueueOpName: [String] = []

  ///   The operation to run to close the queue.
  public var closeOpName: String = ""

  ///   The operation to run to cancel the queue.
  public var cancelOpName: String = ""

  ///   A list of exception types considered to signal a safely closed queue
  ///   if raised during enqueue operations.
  public var queueClosedExceptionTypes: [Tensorflow_Error_Code] = []

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &queueName)
    case 2: handled = try setter.decodeRepeatedField(fieldType: ProtobufString.self, value: &enqueueOpName)
    case 3: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &closeOpName)
    case 4: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &cancelOpName)
    case 5: handled = try setter.decodePackedField(fieldType: Tensorflow_Error_Code.self, value: &queueClosedExceptionTypes)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if queueName != "" {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: queueName, protoFieldNumber: 1, protoFieldName: "queue_name", jsonFieldName: "queueName", swiftFieldName: "queueName")
    }
    if !enqueueOpName.isEmpty {
      try visitor.visitRepeatedField(fieldType: ProtobufString.self, value: enqueueOpName, protoFieldNumber: 2, protoFieldName: "enqueue_op_name", jsonFieldName: "enqueueOpName", swiftFieldName: "enqueueOpName")
    }
    if closeOpName != "" {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: closeOpName, protoFieldNumber: 3, protoFieldName: "close_op_name", jsonFieldName: "closeOpName", swiftFieldName: "closeOpName")
    }
    if cancelOpName != "" {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: cancelOpName, protoFieldNumber: 4, protoFieldName: "cancel_op_name", jsonFieldName: "cancelOpName", swiftFieldName: "cancelOpName")
    }
    if !queueClosedExceptionTypes.isEmpty {
      try visitor.visitPackedField(fieldType: Tensorflow_Error_Code.self, value: queueClosedExceptionTypes, protoFieldNumber: 5, protoFieldName: "queue_closed_exception_types", jsonFieldName: "queueClosedExceptionTypes", swiftFieldName: "queueClosedExceptionTypes")
    }
  }

  public func _protoc_generated_isEqualTo(other: Tensorflow_QueueRunnerDef) -> Bool {
    if queueName != other.queueName {return false}
    if enqueueOpName != other.enqueueOpName {return false}
    if closeOpName != other.closeOpName {return false}
    if cancelOpName != other.cancelOpName {return false}
    if queueClosedExceptionTypes != other.queueClosedExceptionTypes {return false}
    return true
  }
}
